{"version":3,"sources":["dropdown.js"],"names":["Dropdown","open","active","_go","parentElement","ul","classList","remove","_activeClassName","_openClassName","add","_closeRelated","contains","_subnavClassName","_openNested","querySelector","click","dismiss","subnav","querySelectorAll","forEach","rect","getBoundingClientRect","ulRect","right","width","window","innerWidth","style","left","_nestedXPos","top","height","innerHeight","bottom","_nestedYPos","navList","options","bind","_keyboardNavigation","logger","console","log","_items","_createList","_baseClassName","context","document","body","appendChild","keyPrefix","createElement","that","addEventListener","e","key","target","getAttribute","li","navElt","disabled","preventDefault","stopPropagation","children","action","location","href","call","idx","hasOwnProperty","Error","setAttribute","innerText","label","_disabledClassName","clearTimeout","timeout","setTimeout","elt","dirUp","getNext","next","previousElementSibling","nextElementSibling","length","keyCode","_keyboardHandlers","removeEventListener","evt","clientX","clientY","pageXOffset","pageYOffset","autoExpandDir"],"mappings":"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","file":"dropdown.js","sourcesContent":["/**\r\n * Class representing a dropdown\r\n */\r\nclass Dropdown {\r\n    // General documentation of the types\r\n    /**\r\n     * @typedef {Object} Dropdown~NavItem\r\n     * This is the structure of a navigation item\r\n     * @property {string}  label            - The label which is used in the menu\r\n     * @property {string}  [key]            - A unique key for this item. It will be auto generated if not supplied\r\n     * @property {boolean} [disabled=false] - If this is true the item is disabled. If this is true we will not\r\n     *                                        navigate according to the action parameter or run the action\r\n     *                                        callback.\r\n     * @property {(string|Dropdown~actionCallback)} action - What to do when we select this nav item. If this is a string we will\r\n     *                                              navigate like an &lt;a&gt; tag\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~NavMenu\r\n     * This is the structure of a navigation submenu\r\n     * @property {string} label             - The label which is used in the menu\r\n     * @property {string}  [key]            - A unique key for this item. It will be auto generated if not supplied\r\n     * @property {boolean} [disabled=false] - If this is true the item is disabled. When disabled it will not be\r\n     *                                        expanded\r\n     * @property {Array<Dropdown~NavItem|Dropdown~NavMenu>} children - The children of this menu\r\n     */\r\n\r\n    /**\r\n     * @callback Dropdown~actionCallback\r\n     * This is the action callback\r\n     * @param {Event} event - This is the event (either click or keypress) which triggered this handler\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~Options\r\n     * This is the structure of the options object\r\n     * @property {Dropdown~logger} [logger=console.log] - The logger to use\r\n     * @property {Element} [element=document.body] - The element to attach the dropdown to\r\n     */\r\n\r\n    /**\r\n     * @callback Dropdown~logger\r\n     * This is the logging function\r\n     * @param {...*} logItems - This should work similarly to how console.log uses multiple parameters\r\n     */\r\n\r\n    // Private members\r\n    /**\r\n     * Base class name\r\n     *\r\n     * @private\r\n     */\r\n    static get _baseClassName() { return 'dropdown'; }\r\n\r\n    /**\r\n     * Class name of a subnav\r\n     *\r\n     * @private\r\n     */\r\n    static get _subnavClassName() { return 'subnav'; }\r\n\r\n    /**\r\n     * Class name of an open subnav\r\n     *\r\n     * @private\r\n     */\r\n    static get _openClassName() { return 'open';   }\r\n\r\n    /*\r\n     * Class name of an active item\r\n     *\r\n     * @private\r\n     */\r\n    static get _activeClassName() { return 'active'; }\r\n\r\n    /**\r\n     * Class name of a disabled item\r\n     *\r\n     * @private\r\n     */\r\n    static get _disabledClassName() { return 'disabled'; }\r\n\r\n    /**\r\n     * X-position (either positive or negative dependeing on space available) of a submenu. Relative to the parent item.\r\n     *\r\n     * @private\r\n     */\r\n    static get _nestedXPos() { return '95%';    }\r\n\r\n    /**\r\n     * Y-position (either positive or negative depending on space available) of a submenu. Relative to the parent item.\r\n     *\r\n     * @private\r\n     */\r\n    static get _nestedYPos() { return '-0.2em'; }\r\n\r\n    // Private static methods\r\n    /**\r\n     * A helper function to close all submenus on a given level.\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Element} subnav - An element on the level we want to close all the open subnavs\r\n     */\r\n    static _closeRelated(subnav) {\r\n        subnav.parentElement.querySelectorAll(`.${Dropdown._openClassName}`).forEach(subnav => {\r\n            subnav.classList.remove(Dropdown._openClassName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A helper function to open a specific submenu\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Element} subnav - The element of the subnav item we want to open\r\n     */\r\n    static _openNested(subnav) {\r\n        Dropdown._closeRelated(subnav);\r\n        subnav.classList.add(Dropdown._openClassName);\r\n        const ul = subnav.querySelector('ul');\r\n        const rect = subnav.getBoundingClientRect();\r\n        const ulRect = ul.getBoundingClientRect();\r\n\r\n        if((rect.right + ulRect.width) > window.innerWidth) {\r\n            ul.style.left = '';\r\n            ul.style.right = Dropdown._nestedXPos;\r\n        } else {\r\n            ul.style.right = '';\r\n            ul.style.left = Dropdown._nestedXPos;\r\n        }\r\n        if((rect.top + ulRect.height) > window.innerHeight) {\r\n            ul.style.top = '';\r\n            ul.style.bottom = Dropdown._nestedYPos;\r\n        } else {\r\n            ul.style.bottom = '';\r\n            ul.style.top = Dropdown._nestedYPos;\r\n        }\r\n    }\r\n\r\n    get _keyboardHandlers() {\r\n        return {\r\n            // up arrow\r\n            '38': (open, active) => this._go(true, open, active), \r\n\r\n            // down arrow\r\n            '40': (open, active) => this._go(false, open, active),\r\n\r\n            // left arrow\r\n            '37': (active, open) => {\r\n                if(active && active.parentElement !== this.ul && active.parentElement.parentElement !== this.ul) {\r\n                    active.classList.remove(Dropdown._activeClassName);\r\n                    active.parentElement.parentElement.classList.remove(Dropdown._openClassName);\r\n                    active.parentElement.parentElement.classList.add(Dropdown._activeClassName);\r\n                } else if(open && open !== this.ul) {\r\n                    Dropdown._closeRelated(open.parentElement);\r\n                }\r\n            },\r\n\r\n            // right arrow\r\n            '39': active => {\r\n                if(active && active.classList.contains(Dropdown._subnavClassName)) {\r\n                    Dropdown._openNested(active);\r\n                    active.querySelector('li').classList.add(Dropdown._activeClassName);\r\n                }\r\n            },\r\n\r\n            // enter\r\n            '13': active => active && active.click(), \r\n\r\n            // escape\r\n            '27': this.dismiss, \r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Array<Dropdown~NavItem|Dropdown~NavMenu>} navList - Object representation of the context menu.\r\n     * @param {Dropdown~Options} options - Optional parameters for this instance\r\n     */\r\n    constructor(navList, options = {}) { \r\n        this.dismiss = this.dismiss.bind(this);\r\n        this._keyboardNavigation = this._keyboardNavigation.bind(this);\r\n        \r\n        this.logger = options.logger ? options.logger : console.log.bind(console); // eslint-disable-line no-console\r\n        this.navList = navList;\r\n\r\n        this._items = {};\r\n        this.ul = this._createList(navList, 'item');\r\n        this.ul.classList.add(Dropdown._baseClassName);\r\n\r\n        (options.context ? options.context : document.body).appendChild(this.ul);\r\n    }\r\n\r\n    /**\r\n     * A helper function to create the dom structure of the dropdown\r\n     *\r\n     * @private \r\n     *\r\n     * @param navList {Array<Dropdown~NavItem|Dropdown~NavMenu>} The object representation of the context menu\r\n     */\r\n    _createList(navList, keyPrefix) {\r\n        const ul = document.createElement('ul');\r\n\r\n        var that = this;\r\n        ul.addEventListener('click', function(e) {\r\n            const key = e.target.getAttribute('data-key');\r\n            if(!key || !that._items[key]) {\r\n                return;\r\n            }\r\n            const {li, navElt} = that._items[key];\r\n\r\n            if(navElt.disabled) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            if(navElt.children) {\r\n                Dropdown._openNested(li);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            } else if(typeof(navElt.action) === 'string') {\r\n                window.location.href = navElt.action;\r\n            } else if(typeof(navElt.action) === 'function') {\r\n                navElt.action.call(this, e);\r\n            }\r\n        });\r\n\r\n        navList.forEach((navElt, idx) => {\r\n            const li = document.createElement('li');\r\n\r\n            navElt.key = navElt.key ? navElt.key : `${keyPrefix}-${idx}`;\r\n            if(this._items.hasOwnProperty(navElt.key)) {\r\n                throw new Error('Got duplicate key');\r\n            } else {\r\n                this._items[navElt.key] = { navElt, li };\r\n            }\r\n            li.setAttribute('data-key', navElt.key); // only used for debugging\r\n\r\n            li.innerText = navElt.label;\r\n\r\n            if(navElt.disabled) {\r\n                li.classList.add(Dropdown._disabledClassName);\r\n            }\r\n            li.addEventListener('mouseleave', e => {\r\n                if(navElt.disabled) {\r\n                    return;\r\n                }\r\n                this.logger('mouseleave', e);\r\n                clearTimeout(this.timeout);\r\n                e.target.classList.remove(Dropdown._activeClassName);\r\n            });\r\n            li.addEventListener('mouseenter', e => {\r\n                if(navElt.disabled) {\r\n                    return;\r\n                }\r\n                this.logger('mouseenter', e);\r\n\r\n                e.target.classList.add(Dropdown._activeClassName);\r\n\r\n                clearTimeout(this.timeout);\r\n                if(navElt.children) {\r\n                    this.timeout = setTimeout(Dropdown._openNested.bind(null, e.target), 500);\r\n                } else {\r\n                    this.timeout = setTimeout(Dropdown._closeRelated.bind(null, e.target), 500);\r\n                }\r\n            });\r\n\r\n            if(navElt.children) {\r\n                li.appendChild(this._createList(navElt.children, navElt.key));\r\n                li.classList.add(Dropdown._subnavClassName);\r\n            }\r\n\r\n            ul.appendChild(li);\r\n        });\r\n\r\n        return ul;\r\n    }\r\n\r\n    setDisabledState(key, disabled) {\r\n        const { li, navElt } = this._items[key];\r\n        navElt.disabled = disabled;\r\n        if(disabled) {\r\n            li.classList.add(Dropdown._disabledClassName);\r\n            li.classList.remove(Dropdown._openClassName);\r\n            li.classList.remove(Dropdown._activeClassName);\r\n\r\n            li.querySelectorAll(`.${Dropdown._openClassName}, .${Dropdown._activeClassName}`).forEach(elt => {\r\n                elt.classList.remove(Dropdown._openClassName); \r\n                elt.classList.remove(Dropdown._activeClassName);\r\n            });\r\n\r\n        } else {\r\n            li.classList.remove(Dropdown._disabledClassName);\r\n        }\r\n    }\r\n\r\n    _go(dirUp, active, open) {\r\n        const getNext = next => {\r\n            if(dirUp) {\r\n                return next.previousElementSibling;\r\n            } else {\r\n                return next.nextElementSibling;\r\n            }\r\n        };\r\n        if(active) {\r\n            active.classList.remove(Dropdown._activeClassName);\r\n        }\r\n        let next = (active && getNext(active)) || open.children[dirUp ? (open.children.length - 1) : 0];\r\n        while(next && next.classList.contains(Dropdown._disabledClassName)) {\r\n            next = getNext(next);\r\n        }\r\n        if(next) {\r\n            next.classList.add(Dropdown._activeClassName);\r\n        }\r\n        return next;\r\n    }\r\n\r\n    /**\r\n     * This is the keyboard navigation event handler\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Event} e - The keyboard event that triggerd this handler\r\n     */\r\n    _keyboardNavigation(e) {\r\n        let open = this.ul.querySelectorAll(`.${Dropdown._openClassName} > ul`);\r\n        if(open.length > 0) {\r\n            open = open[open.length - 1];\r\n        } else {\r\n            open = this.ul;\r\n        }\r\n        let active = open.querySelector(`li.${Dropdown._activeClassName}`);\r\n        this.logger(open);\r\n\r\n        const key = `${e.keyCode}`;\r\n        if(this._keyboardHandlers.hasOwnProperty(key)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this._keyboardHandlers[key](active, open);\r\n        }\r\n    }\r\n\r\n    // Public methods\r\n    /**\r\n     * Close a dropdown and remove all event listeners on it\r\n     */\r\n    dismiss() {\r\n        this.logger('dismiss');\r\n        this.ul.classList.remove(Dropdown._openClassName);\r\n        document.removeEventListener('keydown', this._keyboardNavigation);\r\n        document.removeEventListener('click', this.dismiss);\r\n\r\n        this.ul.querySelectorAll('li').forEach(subnav => {\r\n            subnav.classList.remove(Dropdown._openClassName);\r\n            subnav.classList.remove(Dropdown._activeClassName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This function will take an event and try to open and position the dropdown next to the mouse pointer or the\r\n     * element the event triggered on.\r\n     *\r\n     * @param {Event} evt - The event that triggered this click\r\n     */\r\n    openClick(evt) {\r\n        this.logger(evt);\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n        if(evt.clientX && evt.clientY) {\r\n            return this.open(window.pageXOffset + evt.clientX, window.pageYOffset + evt.clientY, true);\r\n        } \r\n\r\n        const rect = evt.target.getBoundingClientRect();\r\n        return this.open(window.pageXOffset + rect.right, window.pageYOffset + rect.bottom, true);\r\n    }\r\n\r\n    /**\r\n     * Open the dropdown rooted in the given position. It will expand down and to the right by default, but change\r\n     * expansion direction if it does not have enough space.\r\n     *\r\n     * @param {Number} left                  - How many pixels from the left the element should be positioned\r\n     * @param {Number} top                   - How many pixels from the top the element should be positioned\r\n     * @param {boolean} [autoExpandDir=true] - If true we will automatically expand the dropdown towards the top or\r\n     *                                         left if we don't have any space for it below or to the right. If false we\r\n     *                                         will only expand down and to the right.\r\n     */\r\n    open(left, top, autoExpandDir = true) {\r\n        this.ul.querySelectorAll(`.${Dropdown._openClassName},.${Dropdown._activeClassName}`).forEach(elt => {\r\n            elt.classList.remove(Dropdown._openClassName);\r\n            elt.classList.remove(Dropdown._activeClassName);\r\n        });\r\n        this.ul.classList.add(Dropdown._openClassName);\r\n\r\n        const rect = this.ul.getBoundingClientRect();\r\n        this.ul.style.left = `${left}px`;\r\n        this.ul.style.top = `${top}px`;\r\n        if(autoExpandDir) {\r\n            if((left + rect.width) >= (window.pageXOffset + window.innerWidth)) {\r\n                this.ul.style.left = `${left - rect.width}px`;\r\n            }\r\n            if((top + rect.height) >= (window.pageYOffset + window.innerHeight)) {\r\n                this.ul.style.top = `${top - rect.height}px`;\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', this._keyboardNavigation);\r\n        document.addEventListener('click', this.dismiss);\r\n\r\n        return this.ul;\r\n    }\r\n}\r\n\r\n//window.Dropdown = Dropdown;\r\nexport default Dropdown;\r\n"]}
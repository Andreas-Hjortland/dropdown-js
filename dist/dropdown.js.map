{"version":3,"sources":["dropdown.js"],"names":["Dropdown","subnav","parentElement","querySelectorAll","_openClassName","forEach","classList","remove","_closeRelated","add","ul","querySelector","rect","getBoundingClientRect","ulRect","right","width","window","innerWidth","style","left","_nestedXPos","top","height","innerHeight","bottom","_nestedYPos","navList","options","logger","console","log","bind","dismiss","_createList","_keyboardHandlers","open","active","_go","_activeClassName","contains","_subnavClassName","_openNested","click","context","document","body","appendChild","_keyboardNavigation","createElement","li","innerText","navElt","label","disabled","_disabledClassName","addEventListener","e","preventDefault","stopPropagation","clearTimeout","timeout","target","children","setTimeout","action","location","href","dirUp","getNext","next","previousElementSibling","nextElementSibling","length","key","keyCode","hasOwnProperty","removeEventListener","evt","clientX","clientY","pageXOffset","pageYOffset","autoExpandDir","elt"],"mappings":"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","file":"dropdown.js","sourcesContent":["/**\n * Class representing a dropdown\n */\nclass Dropdown {\n    // General documentation of the types\n    /**\n     * @typedef {Object} Dropdown~NavItem\n     * This is the structure of a navigation item\n     * @property {string} label                   - The label which is used in the menu\n     * @property {boolean} [disabled=false]       - If this is true the item is disabled. If this is true we will not\n     *                                              navigate according to the action parameter or run the action\n     *                                              callback.\n     * @property {(string|Dropdown~actionCallback)} action - What to do when we select this nav item. If this is a string we will\n     *                                              navigate like an &lt;a&gt; tag\n     */\n\n    /**\n     * @typedef {Object} Dropdown~NavMenu\n     * This is the structure of a navigation submenu\n     * @property {string} label                    - The label which is used in the menu\n     * @property {boolean} [disabled=false]        - If this is true the item is disabled. When disabled it will not be\n     *                                               expanded\n     * @property {Array<Dropdown~NavItem|Dropdown~NavMenu>} children - The children of this menu\n     */\n\n    /**\n     * @callback Dropdown~actionCallback\n     * This is the action callback\n     * @param {Event} event - This is the event (either click or keypress) which triggered this handler\n     */\n\n    /**\n     * @typedef {Object} Dropdown~Options\n     * This is the structure of the options object\n     * @property {Dropdown~logger} [logger=console.log] - The logger to use\n     * @property {Element} [element=document.body] - The element to attach the dropdown to\n     */\n\n    /**\n     * @callback Dropdown~logger\n     * This is the logging function\n     * @param {...*} logItems - This should work similarly to how console.log uses multiple parameters\n     */\n\n    // Private members\n    /**\n     * Class name of a subnav\n     *\n     * @private\n     */\n    static get _subnavClassName() { return 'subnav'; }\n\n    /**\n     * Class name of an open subnav\n     *\n     * @private\n     */\n    static get _openClassName() { return 'open';   }\n\n    /*\n     * Class name of an active item\n     *\n     * @private\n     */\n    static get _activeClassName() { return 'active'; }\n\n    /**\n     * Class name of a disabled item\n     *\n     * @private\n     */\n    static get _disabledClassName() { return 'disabled'; }\n\n    /**\n     * X-position (either positive or negative dependeing on space available) of a submenu. Relative to the parent item.\n     *\n     * @private\n     */\n    static get _nestedXPos() { return '95%';    }\n\n    /**\n     * Y-position (either positive or negative depending on space available) of a submenu. Relative to the parent item.\n     *\n     * @private\n     */\n    static get _nestedYPos() { return '-0.2em'; }\n\n    // Private static methods\n    /**\n     * A helper function to close all submenus on a given level.\n     *\n     * @private\n     *\n     * @param {Element} subnav - An element on the level we want to close all the open subnavs\n     */\n    static _closeRelated(subnav) {\n        subnav.parentElement.querySelectorAll(`.${Dropdown._openClassName}`).forEach(subnav => {\n            subnav.classList.remove(Dropdown._openClassName);\n        });\n    }\n    /**\n     * A helper function to open a specific submenu\n     *\n     * @private\n     *\n     * @param {Element} subnav - The element of the subnav item we want to open\n     */\n    static _openNested(subnav) {\n        Dropdown._closeRelated(subnav);\n        subnav.classList.add(Dropdown._openClassName);\n        const ul = subnav.querySelector('ul');\n        const rect = subnav.getBoundingClientRect();\n        const ulRect = ul.getBoundingClientRect();\n\n        if((rect.right + ulRect.width) > window.innerWidth) {\n            ul.style.left = '';\n            ul.style.right = Dropdown._nestedXPos;\n        } else {\n            ul.style.right = '';\n            ul.style.left = Dropdown._nestedXPos;\n        }\n        if((rect.top + ulRect.height) > window.innerHeight) {\n            ul.style.top = '';\n            ul.style.bottom = Dropdown._nestedYPos;\n        } else {\n            ul.style.bottom = '';\n            ul.style.top = Dropdown._nestedYPos;\n        }\n    }\n\n\n    /**\n     * @constructor\n     * @param {Array<Dropdown~NavItem|Dropdown~NavMenu>} navList - Object representation of the context menu.\n     * @param {Dropdown~Options} options - Optional parameters for this instance\n     */\n    constructor(navList, options = {}) { \n        this.logger = options.logger ? options.logger : console.log.bind(console); // eslint-disable-line no-console\n\n        this.dismiss = this.dismiss.bind(this);\n\n        this.ul = this._createList(navList);\n        this.ul.classList.add('dropdown');\n\n        this._keyboardHandlers = {\n            // up arrow\n            '38': (open, active) => this._go(true, open, active), \n\n            // down arrow\n            '40': (open, active) => this._go(false, open, active),\n\n            // left arrow\n            '37': (active, open) => {\n                if(active && active.parentElement !== this.ul && active.parentElement.parentElement !== this.ul) {\n                    active.classList.remove(Dropdown._activeClassName);\n                    active.parentElement.parentElement.classList.remove(Dropdown._openClassName);\n                    active.parentElement.parentElement.classList.add(Dropdown._activeClassName);\n                } else if(open && open !== this.ul) {\n                    Dropdown._closeRelated(open.parentElement);\n                }\n            },\n\n            // right arrow\n            '39': active => {\n                if(active && active.classList.contains(Dropdown._subnavClassName)) {\n                    Dropdown._openNested(active);\n                    active.querySelector('li').classList.add(Dropdown._activeClassName);\n                }\n            },\n\n            // enter\n            '13': active => active && active.click(), \n\n            // escape\n            '27': this.dismiss, \n        };\n\n        (options.context ? options.context : document.body).appendChild(this.ul);\n\n        this._keyboardNavigation = this._keyboardNavigation.bind(this);\n\n    }\n\n    /**\n     * A helper function to create the dom structure of the dropdown\n     *\n     * @private \n     *\n     * @param navList {Array<Dropdown~NavItem|Dropdown~NavMenu>} The object representation of the context menu\n     */\n    _createList(navList) {\n        const ul = document.createElement('ul');\n        navList.forEach(navElt => {\n            const li = document.createElement('li');\n            li.innerText = navElt.label;\n\n            if(navElt.disabled) {\n                li.classList.add(Dropdown._disabledClassName);\n                li.addEventListener('click', e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                });\n            } else {\n                li.addEventListener('mouseleave', e => {\n                    this.logger('mouseleave', e);\n                    clearTimeout(this.timeout);\n                    e.target.classList.remove(Dropdown._activeClassName);\n                });\n                li.addEventListener('mouseenter', e => {\n                    this.logger('mouseenter', e);\n\n                    e.target.classList.add(Dropdown._activeClassName);\n\n                    clearTimeout(this.timeout);\n                    if(navElt.children) {\n                        this.timeout = setTimeout(Dropdown._openNested.bind(null, e.target), 500);\n                    } else {\n                        this.timeout = setTimeout(Dropdown._closeRelated.bind(null, e.target), 500);\n                    }\n                });\n\n                if(navElt.children) {\n                    li.addEventListener('click', function(e) {\n                        if(e.target === this) {\n                            Dropdown._openNested(li);\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    });\n                    li.appendChild(this._createList(navElt.children));\n                    li.classList.add(Dropdown._subnavClassName);\n                } else if(typeof(navElt.action) === 'string') {\n                    li.addEventListener('click', () => window.location.href = navElt.action);\n                } else if(typeof(navElt.action) === 'function') {\n                    li.addEventListener('click', navElt.action);\n                }\n            }\n\n            ul.appendChild(li);\n        });\n\n        return ul;\n    }\n\n    _go(dirUp, active, open) {\n        const getNext = next => {\n            if(dirUp) {\n                return next.previousElementSibling;\n            } else {\n                return next.nextElementSibling;\n            }\n        };\n        if(active) {\n            active.classList.remove(Dropdown._activeClassName);\n        }\n        let next = (active && getNext(active)) || open.children[dirUp ? (open.children.length - 1) : 0];\n        while(next && next.classList.contains(Dropdown._disabledClassName)) {\n            next = getNext(next);\n        }\n        if(next) {\n            next.classList.add(Dropdown._activeClassName);\n        }\n        return next;\n    }\n\n    /**\n     * This is the keyboard navigation event handler\n     *\n     * @private\n     *\n     * @param {Event} e - The keyboard event that triggerd this handler\n     */\n    _keyboardNavigation(e) {\n        let open = this.ul.querySelectorAll(`.${Dropdown._openClassName} > ul`);\n        if(open.length > 0) {\n            open = open[open.length - 1];\n        } else {\n            open = this.ul;\n        }\n        let active = open.querySelector(`li.${Dropdown._activeClassName}`);\n        this.logger(open);\n\n        const key = `${e.keyCode}`;\n        if(this._keyboardHandlers.hasOwnProperty(key)) {\n            e.stopPropagation();\n            e.preventDefault();\n            this._keyboardHandlers[key](active, open);\n        }\n    }\n\n    // Public methods\n    /**\n     * Close a dropdown and remove all event listeners on it\n     */\n    dismiss() {\n        this.logger('dismiss');\n        this.ul.classList.remove(Dropdown._openClassName);\n        document.removeEventListener('keydown', this._keyboardNavigation);\n        document.removeEventListener('click', this.dismiss);\n\n        this.ul.querySelectorAll('li').forEach(subnav => {\n            subnav.classList.remove(Dropdown._openClassName,Dropdown._activeClassName);\n        });\n    }\n\n    /**\n     * This function will take an event and try to open and position the dropdown next to the mouse pointer or the\n     * element the event triggered on.\n     *\n     * @param {Event} evt - The event that triggered this click\n     */\n    openClick(evt) {\n        this.logger(evt);\n        evt.stopPropagation();\n        evt.preventDefault();\n        if(evt.clientX && evt.clientY) {\n            return this.open(window.pageXOffset + evt.clientX, window.pageYOffset + evt.clientY, true);\n        } \n\n        const rect = evt.target.getBoundingClientRect();\n        return this.open(window.pageXOffset + rect.right, window.pageYOffset + rect.bottom, true);\n    }\n\n    /**\n     * Open the dropdown rooted in the given position. It will expand down and to the right by default, but change\n     * expansion direction if it does not have enough space.\n     *\n     * @param {Number} left                  - How many pixels from the left the element should be positioned\n     * @param {Number} top                   - How many pixels from the top the element should be positioned\n     * @param {boolean} [autoExpandDir=true] - If true we will automatically expand the dropdown towards the top or\n     *                                         left if we don't have any space for it below or to the right. If false we\n     *                                         will only expand down and to the right.\n     */\n    open(left, top, autoExpandDir = true) {\n        this.ul.querySelectorAll(`.${Dropdown._openClassName},.${Dropdown._activeClassName}`).forEach(elt => {\n            elt.classList.remove(Dropdown._openClassName,Dropdown._activeClassName);\n        });\n        this.ul.classList.add(Dropdown._openClassName);\n\n        const rect = this.ul.getBoundingClientRect();\n        this.ul.style.left = `${left}px`;\n        this.ul.style.top = `${top}px`;\n        if(autoExpandDir) {\n            if((left + rect.width) >= (window.pageXOffset + window.innerWidth)) {\n                this.ul.style.left = `${left - rect.width}px`;\n            }\n            if((top + rect.height) >= (window.pageYOffset + window.innerHeight)) {\n                this.ul.style.top = `${top - rect.height}px`;\n            }\n        }\n\n        document.addEventListener('keydown', this._keyboardNavigation);\n        document.addEventListener('click', this.dismiss);\n\n        return this.ul;\n    }\n}\n\nexport default Dropdown;\n"]}
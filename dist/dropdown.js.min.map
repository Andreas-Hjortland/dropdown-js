{"version":3,"sources":["dropdown.js"],"names":["Dropdown","navList","options","dismiss","bind","_keyboardNavigation","logger","console","log","_items","ul","_createList","classList","add","_baseClassName","domcontext","context","document","body","open","active","_go","parentElement","remove","_activeClassName","_openClassName","_closeRelated","contains","_subnavClassName","_openNested","querySelector","click","subnav","querySelectorAll","forEach","rect","getBoundingClientRect","ulRect","right","width","window","innerWidth","style","left","_nestedXPos","top","height","innerHeight","bottom","_nestedYPos","keyPrefix","createElement","addEventListener","e","key","target","getAttribute","li","navElt","disabled","label","preventDefault","stopPropagation","children","action","location","href","call","idx","hasOwnProperty","Error","setAttribute","divider","_disabledClassName","_dividerClassName","innerText","icon","backgroundImage","iconClass","span","className","insertBefore","firstChild","clearTimeout","timeout","setTimeout","appendChild","elt","dirUp","getNext","next","previousElementSibling","nextElementSibling","length","keyCode","_keyboardHandlers","removeEventListener","evt","clientX","clientY","pageXOffset","pageYOffset","autoExpandDir","_updateLabels"],"mappings":"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","sourcesContent":["/**\r\n * Class representing a dropdown\r\n */\r\nclass Dropdown {\r\n    // General documentation of the types\r\n    /**\r\n     * @typedef {Object} Dropdown~NavDivider\r\n     * This is the structure of a navigation divider. It is just like the NavItem with no label or action.\r\n     * @property {string}  [key] - A unique key for this item. It will be auto generated if not supplied\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~NavItem\r\n     * This is the structure of a navigation item\r\n     * @property {string|function} label    - The label which is used in the menu. If it is a function it will be called\r\n     *                                        every time the menu is opened and set the label to the return value of\r\n     *                                        this function. The <code>this</code> object of the function is the\r\n     *                                        Dropdown instance itself unless otherwise bound.\r\n     * @property {string}  [icon]           - An icon to be used. This needs to be a path to a valid css\r\n     *                                        background-image string.\r\n     * @property {string}  [key]            - A unique key for this item. It will be auto generated if not supplied\r\n     * @property {boolean} [disabled=false] - If this is true the item is disabled. When disabled we will not navigate\r\n     *                                        according to the action parameter or run the action callback.\r\n     * @property {(string|Dropdown~actionCallback)} action - What to do when we select this nav item. If this is a\r\n     *                                                       string we will navigate like an &lt;a&gt; tag\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~NavMenu\r\n     * This is the structure of a navigation submenu\r\n     * @property {string} label             - The label which is used in the menu\r\n     * @property {string} [icon]            - An icon to be used. This needs to be a path to a valid css\r\n     *                                        background-image string.\r\n     * @property {string}  [key]            - A unique key for this item. It will be auto generated if not supplied\r\n     * @property {boolean} [disabled=false] - If this is true the item is disabled. When disabled it will not be\r\n     *                                        expanded\r\n     * @property {Array<Dropdown~NavItem|Dropdown~NavMenu|Dropdown~NavDivider>} children - The children of this menu\r\n     */\r\n\r\n    /**\r\n     * The action callback. The <code>this</code> context is the instance of the dropdown itself unless otherwise bound.\r\n     * @callback Dropdown~actionCallback\r\n     * @param {Event} event - This is the event (either click or keypress) which triggered this handler\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~Options\r\n     * This is the structure of the options object\r\n     * @property {Dropdown~logger} [logger=console.log] - The logger to use\r\n     * @property {Element} [element=document.body] - The element to attach the dropdown to\r\n     */\r\n\r\n    /**\r\n     * The logging function. Use this if you want to expose internal logging information.\r\n     * @callback Dropdown~logger\r\n     * @param {...*} logItems - This should work similarly to how <code>console.log</code> uses multiple parameters\r\n     */\r\n\r\n    // Private members\r\n    /**\r\n     * Base class name\r\n     *\r\n     * @private\r\n     */\r\n    static get _baseClassName() { return 'dropdown'; }\r\n\r\n    /**\r\n     * Class name of a subnav\r\n     *\r\n     * @private\r\n     */\r\n    static get _subnavClassName() { return 'subnav'; }\r\n\r\n    /**\r\n     * Class name of an open subnav\r\n     *\r\n     * @private\r\n     */\r\n    static get _openClassName() { return 'open';   }\r\n\r\n    /**\r\n     * Class name of a divider\r\n     *\r\n     * @private\r\n     */\r\n    static get _dividerClassName() { return 'divider';   }\r\n\r\n    /*\r\n     * Class name of an active item\r\n     *\r\n     * @private\r\n     */\r\n    static get _activeClassName() { return 'active'; }\r\n\r\n    /**\r\n     * Class name of a disabled item\r\n     *\r\n     * @private\r\n     */\r\n    static get _disabledClassName() { return 'disabled'; }\r\n\r\n    /**\r\n     * X-position (either positive or negative dependeing on space available) of a submenu. Relative to the parent item.\r\n     *\r\n     * @private\r\n     */\r\n    static get _nestedXPos() { return '95%';    }\r\n\r\n    /**\r\n     * Y-position (either positive or negative depending on space available) of a submenu. Relative to the parent item.\r\n     *\r\n     * @private\r\n     */\r\n    static get _nestedYPos() { return '-0.2em'; }\r\n\r\n    // Private static methods\r\n    /**\r\n     * A helper function to close all submenus on a given level.\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Element} subnav - An element on the level we want to close all the open subnavs\r\n     */\r\n    static _closeRelated(subnav) {\r\n        subnav.parentElement.querySelectorAll(`.${Dropdown._openClassName}`).forEach(subnav => {\r\n            subnav.classList.remove(Dropdown._openClassName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A helper function to open a specific submenu\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Element} subnav - The element of the subnav item we want to open\r\n     */\r\n    static _openNested(subnav) {\r\n        Dropdown._closeRelated(subnav);\r\n        subnav.classList.add(Dropdown._openClassName);\r\n        const ul = subnav.querySelector('ul');\r\n        const rect = subnav.getBoundingClientRect();\r\n        const ulRect = ul.getBoundingClientRect();\r\n\r\n        if((rect.right + ulRect.width) > window.innerWidth) {\r\n            ul.style.left = '';\r\n            ul.style.right = Dropdown._nestedXPos;\r\n        } else {\r\n            ul.style.right = '';\r\n            ul.style.left = Dropdown._nestedXPos;\r\n        }\r\n        if((rect.top + ulRect.height) > window.innerHeight) {\r\n            ul.style.top = '';\r\n            ul.style.bottom = Dropdown._nestedYPos;\r\n        } else {\r\n            ul.style.bottom = '';\r\n            ul.style.top = Dropdown._nestedYPos;\r\n        }\r\n    }\r\n\r\n    get _keyboardHandlers() {\r\n        return {\r\n            // up arrow\r\n            '38': (open, active) => this._go(true, open, active), \r\n\r\n            // down arrow\r\n            '40': (open, active) => this._go(false, open, active),\r\n\r\n            // left arrow\r\n            '37': (active, open) => {\r\n                if(active && active.parentElement !== this.ul && active.parentElement.parentElement !== this.ul) {\r\n                    active.classList.remove(Dropdown._activeClassName);\r\n                    active.parentElement.parentElement.classList.remove(Dropdown._openClassName);\r\n                    active.parentElement.parentElement.classList.add(Dropdown._activeClassName);\r\n                } else if(open && open !== this.ul) {\r\n                    Dropdown._closeRelated(open.parentElement);\r\n                }\r\n            },\r\n\r\n            // right arrow\r\n            '39': active => {\r\n                if(active && active.classList.contains(Dropdown._subnavClassName)) {\r\n                    Dropdown._openNested(active);\r\n                    active.querySelector('li').classList.add(Dropdown._activeClassName);\r\n                }\r\n            },\r\n\r\n            // enter\r\n            '13': active => active && active.click(), \r\n\r\n            // escape\r\n            '27': this.dismiss, \r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Array<Dropdown~NavItem|Dropdown~NavMenu|Dropdown~NavDivider>} navList - Object representation of the context menu.\r\n     * @param {Dropdown~Options} options - Optional parameters for this instance\r\n     */\r\n    constructor(navList, options = {}) { \r\n        this.dismiss = this.dismiss.bind(this);\r\n        this._keyboardNavigation = this._keyboardNavigation.bind(this);\r\n        \r\n        this.logger = options.logger ? options.logger : console.log.bind(console); // eslint-disable-line no-console\r\n        this.navList = navList;\r\n\r\n        this._items = {};\r\n        this.ul = this._createList(navList, 'item');\r\n        this.ul.classList.add(Dropdown._baseClassName);\r\n\r\n        this.domcontext = options.context || document.body;\r\n    }\r\n\r\n    /**\r\n     * A helper function to create the dom structure of the dropdown\r\n     *\r\n     * @private \r\n     *\r\n     * @param navList {Array<Dropdown~NavItem|Dropdown~NavMenu|Dropdown~NavDivider>} The object representation of the context menu\r\n     */\r\n    _createList(navList, keyPrefix) {\r\n        const ul = document.createElement('ul');\r\n\r\n        ul.addEventListener('click', e => {\r\n            const key = e.target.getAttribute('data-key');\r\n            if(!key || !this._items[key]) {\r\n                return;\r\n            }\r\n            const {li, navElt} = this._items[key];\r\n\r\n            if(navElt.disabled || !navElt.label) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            if(navElt.children) {\r\n                Dropdown._openNested(li);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            } else if(typeof(navElt.action) === 'string') {\r\n                window.location.href = navElt.action;\r\n            } else if(typeof(navElt.action) === 'function') {\r\n                navElt.action.call(this, e);\r\n            }\r\n        });\r\n\r\n        navList.forEach((navElt, idx) => {\r\n            const li = document.createElement('li');\r\n\r\n            navElt.key = navElt.key ? navElt.key : `${keyPrefix}-${idx}`;\r\n            if(this._items.hasOwnProperty(navElt.key)) {\r\n                throw new Error('Got duplicate key');\r\n            } else {\r\n                this._items[navElt.key] = { navElt, li };\r\n            }\r\n            li.setAttribute('data-key', navElt.key);\r\n\r\n            const divider = typeof navElt.label === 'undefined';\r\n            if(navElt.disabled || divider) {\r\n                li.classList.add(Dropdown._disabledClassName);\r\n            }\r\n            if(divider) { // divider\r\n                li.classList.add(Dropdown._dividerClassName);\r\n            } else if(typeof navElt.label === 'function') {\r\n                li.innerText = navElt.label.call(this);\r\n            } else {\r\n                li.innerText = navElt.label;\r\n            }\r\n\r\n            if(navElt.icon) {\r\n                li.style.backgroundImage = navElt.icon;\r\n            } else if(navElt.iconClass) {\r\n                const span = document.createElement('span');\r\n                span.className = `${navElt.iconClass} icon`;\r\n                li.insertBefore(span, li.firstChild);\r\n            }\r\n\r\n            li.addEventListener('mouseleave', e => {\r\n                this.logger('mouseleave', e);\r\n                clearTimeout(this.timeout);\r\n\r\n                e.target.classList.remove(Dropdown._activeClassName);\r\n            });\r\n            li.addEventListener('mouseenter', e => {\r\n                this.logger('mouseenter', e);\r\n                clearTimeout(this.timeout);\r\n\r\n                if(navElt.disabled || divider) {\r\n                    this.timeout = setTimeout(Dropdown._closeRelated.bind(null, e.target), 500);\r\n                    return;\r\n                }\r\n\r\n                e.target.classList.add(Dropdown._activeClassName);\r\n                clearTimeout(this.timeout);\r\n                if(navElt.children) {\r\n                    this.timeout = setTimeout(Dropdown._openNested.bind(null, e.target), 500);\r\n                } else {\r\n                    this.timeout = setTimeout(Dropdown._closeRelated.bind(null, e.target), 500);\r\n                }\r\n            });\r\n\r\n            if(navElt.children) {\r\n                li.appendChild(this._createList(navElt.children, navElt.key));\r\n                li.classList.add(Dropdown._subnavClassName);\r\n            }\r\n\r\n            ul.appendChild(li);\r\n        });\r\n\r\n        return ul;\r\n    }\r\n\r\n    setDisabledState(key, disabled) {\r\n        const { li, navElt } = this._items[key];\r\n        navElt.disabled = disabled;\r\n        if(disabled) {\r\n            li.classList.add(Dropdown._disabledClassName);\r\n            li.classList.remove(Dropdown._openClassName);\r\n            li.classList.remove(Dropdown._activeClassName);\r\n\r\n            li.querySelectorAll(`.${Dropdown._openClassName}, .${Dropdown._activeClassName}`).forEach(elt => {\r\n                elt.classList.remove(Dropdown._openClassName); \r\n                elt.classList.remove(Dropdown._activeClassName);\r\n            });\r\n\r\n        } else {\r\n            li.classList.remove(Dropdown._disabledClassName);\r\n        }\r\n    }\r\n\r\n    _go(dirUp, active, open) {\r\n        const getNext = next => {\r\n            if(dirUp) {\r\n                return next.previousElementSibling;\r\n            } else {\r\n                return next.nextElementSibling;\r\n            }\r\n        };\r\n        if(active) {\r\n            active.classList.remove(Dropdown._activeClassName);\r\n        }\r\n        let next = (active && getNext(active)) || open.children[dirUp ? (open.children.length - 1) : 0];\r\n        while(next && next.classList.contains(Dropdown._disabledClassName)) {\r\n            next = getNext(next);\r\n        }\r\n        if(next) {\r\n            next.classList.add(Dropdown._activeClassName);\r\n        }\r\n        return next;\r\n    }\r\n\r\n    /**\r\n     * This is the keyboard navigation event handler\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Event} e - The keyboard event that triggerd this handler\r\n     */\r\n    _keyboardNavigation(e) {\r\n        let open = this.ul.querySelectorAll(`.${Dropdown._openClassName} > ul`);\r\n        if(open.length > 0) {\r\n            open = open[open.length - 1];\r\n        } else {\r\n            open = this.ul;\r\n        }\r\n        let active = open.querySelector(`li.${Dropdown._activeClassName}`);\r\n        this.logger(open);\r\n\r\n        const key = `${e.keyCode}`;\r\n        if(this._keyboardHandlers.hasOwnProperty(key)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this._keyboardHandlers[key](active, open);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update all labels where we have a function that generates the labels instead of a string\r\n     *\r\n     * @private\r\n     */\r\n    _updateLabels() {\r\n        for(let key in this._items) {\r\n            if(this._items.hasOwnProperty(key)) {\r\n                const { navElt, li } = this._items[key];\r\n                if(typeof navElt.label === 'function') {\r\n                    li.innerText = navElt.label.call(this);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Public methods\r\n    /**\r\n     * Close a dropdown and remove all event listeners on it\r\n     */\r\n    dismiss() {\r\n        this.logger('dismiss');\r\n        this.ul.classList.remove(Dropdown._openClassName);\r\n        document.removeEventListener('keydown', this._keyboardNavigation);\r\n        document.removeEventListener('click', this.dismiss);\r\n\r\n        this.ul.querySelectorAll('li').forEach(subnav => {\r\n            subnav.classList.remove(Dropdown._openClassName);\r\n            subnav.classList.remove(Dropdown._activeClassName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This function will take an event and try to open and position the dropdown next to the mouse pointer or the\r\n     * element the event triggered on.\r\n     *\r\n     * @param {Event} evt     - The event that triggered this click\r\n     * @param {any} [context] - Optional context which is set on the Dropdown instance when we open it. This can be\r\n     *                          anything and is available through <code>this.context</code> on the action function\r\n     */\r\n    openClick(evt, context = undefined) {\r\n        this.logger(evt);\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n        if(evt.clientX && evt.clientY) {\r\n            return this.open(window.pageXOffset + evt.clientX, window.pageYOffset + evt.clientY, true, context);\r\n        } \r\n\r\n        const rect = evt.target.getBoundingClientRect();\r\n        return this.open(window.pageXOffset + rect.right, window.pageYOffset + rect.bottom, true, context);\r\n    }\r\n\r\n    /**\r\n     * Open the dropdown rooted in the given position. It will expand down and to the right by default, but change\r\n     * expansion direction if it does not have enough space.\r\n     *\r\n     * @param {Number} left                  - How many pixels from the left the element should be positioned\r\n     * @param {Number} top                   - How many pixels from the top the element should be positioned\r\n     * @param {boolean} [autoExpandDir=true] - If true we will automatically expand the dropdown towards the top or\r\n     *                                         left if we don't have any space for it below or to the right. If false we\r\n     *                                         will only expand down and to the right.\r\n     * @param {any} [context]                - Optional context which is set on the Dropdown instance when we open it.\r\n     *                                         This can be anything and is available through <code>this.context</code>\r\n     *                                         on the action function\r\n     */\r\n    open(left, top, autoExpandDir = true, context = undefined) {\r\n        if(!this.domcontext.contains(this.ul)) {\r\n            this.domcontext.appendChild(this.ul);\r\n        }\r\n        this.context = context;\r\n        this._updateLabels();\r\n        this.ul.querySelectorAll(`.${Dropdown._openClassName},.${Dropdown._activeClassName}`).forEach(elt => {\r\n            elt.classList.remove(Dropdown._openClassName);\r\n            elt.classList.remove(Dropdown._activeClassName);\r\n        });\r\n        this.ul.classList.add(Dropdown._openClassName);\r\n\r\n        const rect = this.ul.getBoundingClientRect();\r\n        this.ul.style.left = `${left}px`;\r\n        this.ul.style.top = `${top}px`;\r\n        if(autoExpandDir) {\r\n            if((left + rect.width) >= (window.pageXOffset + window.innerWidth)) {\r\n                this.ul.style.left = `${left - rect.width}px`;\r\n            }\r\n            if((top + rect.height) >= (window.pageYOffset + window.innerHeight)) {\r\n                this.ul.style.top = `${top - rect.height}px`;\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', this._keyboardNavigation);\r\n        document.addEventListener('click', this.dismiss);\r\n\r\n        return this.ul;\r\n    }\r\n}\r\n\r\nexport default Dropdown;\r\n"],"file":"dropdown.js"}
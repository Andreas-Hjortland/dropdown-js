{"version":3,"sources":["dropdown.js"],"names":["Dropdown","navList","options","dismiss","bind","_keyboardNavigation","logger","console","log","_items","ul","_createList","classList","add","_baseClassName","context","document","body","appendChild","open","active","_go","parentElement","remove","_activeClassName","_openClassName","_closeRelated","contains","_subnavClassName","_openNested","querySelector","click","subnav","querySelectorAll","forEach","rect","getBoundingClientRect","ulRect","right","width","window","innerWidth","style","left","_nestedXPos","top","height","innerHeight","bottom","_nestedYPos","keyPrefix","createElement","that","addEventListener","e","key","target","getAttribute","li","navElt","disabled","preventDefault","stopPropagation","children","action","location","href","call","idx","hasOwnProperty","Error","setAttribute","innerText","label","_disabledClassName","clearTimeout","timeout","setTimeout","elt","dirUp","getNext","next","previousElementSibling","nextElementSibling","length","keyCode","_keyboardHandlers","removeEventListener","evt","clientX","clientY","pageXOffset","pageYOffset","autoExpandDir"],"mappings":"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","file":"dropdown.js","sourcesContent":["/**\r\n * Class representing a dropdown\r\n */\r\nclass Dropdown {\r\n    // General documentation of the types\r\n    /**\r\n     * @typedef {Object} Dropdown~NavItem\r\n     * This is the structure of a navigation item\r\n     * @property {string}  label            - The label which is used in the menu\r\n     * @property {string}  [key]            - A unique key for this item. It will be auto generated if not supplied\r\n     * @property {boolean} [disabled=false] - If this is true the item is disabled. If this is true we will not\r\n     *                                        navigate according to the action parameter or run the action\r\n     *                                        callback.\r\n     * @property {(string|Dropdown~actionCallback)} action - What to do when we select this nav item. If this is a string we will\r\n     *                                              navigate like an &lt;a&gt; tag\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~NavMenu\r\n     * This is the structure of a navigation submenu\r\n     * @property {string} label             - The label which is used in the menu\r\n     * @property {string}  [key]            - A unique key for this item. It will be auto generated if not supplied\r\n     * @property {boolean} [disabled=false] - If this is true the item is disabled. When disabled it will not be\r\n     *                                        expanded\r\n     * @property {Array<Dropdown~NavItem|Dropdown~NavMenu>} children - The children of this menu\r\n     */\r\n\r\n    /**\r\n     * @callback Dropdown~actionCallback\r\n     * This is the action callback\r\n     * @param {Event} event - This is the event (either click or keypress) which triggered this handler\r\n     */\r\n\r\n    /**\r\n     * @typedef {Object} Dropdown~Options\r\n     * This is the structure of the options object\r\n     * @property {Dropdown~logger} [logger=console.log] - The logger to use\r\n     * @property {Element} [element=document.body] - The element to attach the dropdown to\r\n     */\r\n\r\n    /**\r\n     * @callback Dropdown~logger\r\n     * This is the logging function\r\n     * @param {...*} logItems - This should work similarly to how console.log uses multiple parameters\r\n     */\r\n\r\n    // Private members\r\n    /**\r\n     * Base class name\r\n     *\r\n     * @private\r\n     */\r\n    static get _baseClassName() { return 'dropdown'; }\r\n\r\n    /**\r\n     * Class name of a subnav\r\n     *\r\n     * @private\r\n     */\r\n    static get _subnavClassName() { return 'subnav'; }\r\n\r\n    /**\r\n     * Class name of an open subnav\r\n     *\r\n     * @private\r\n     */\r\n    static get _openClassName() { return 'open';   }\r\n\r\n    /*\r\n     * Class name of an active item\r\n     *\r\n     * @private\r\n     */\r\n    static get _activeClassName() { return 'active'; }\r\n\r\n    /**\r\n     * Class name of a disabled item\r\n     *\r\n     * @private\r\n     */\r\n    static get _disabledClassName() { return 'disabled'; }\r\n\r\n    /**\r\n     * X-position (either positive or negative dependeing on space available) of a submenu. Relative to the parent item.\r\n     *\r\n     * @private\r\n     */\r\n    static get _nestedXPos() { return '95%';    }\r\n\r\n    /**\r\n     * Y-position (either positive or negative depending on space available) of a submenu. Relative to the parent item.\r\n     *\r\n     * @private\r\n     */\r\n    static get _nestedYPos() { return '-0.2em'; }\r\n\r\n    // Private static methods\r\n    /**\r\n     * A helper function to close all submenus on a given level.\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Element} subnav - An element on the level we want to close all the open subnavs\r\n     */\r\n    static _closeRelated(subnav) {\r\n        subnav.parentElement.querySelectorAll(`.${Dropdown._openClassName}`).forEach(subnav => {\r\n            subnav.classList.remove(Dropdown._openClassName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * A helper function to open a specific submenu\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Element} subnav - The element of the subnav item we want to open\r\n     */\r\n    static _openNested(subnav) {\r\n        Dropdown._closeRelated(subnav);\r\n        subnav.classList.add(Dropdown._openClassName);\r\n        const ul = subnav.querySelector('ul');\r\n        const rect = subnav.getBoundingClientRect();\r\n        const ulRect = ul.getBoundingClientRect();\r\n\r\n        if((rect.right + ulRect.width) > window.innerWidth) {\r\n            ul.style.left = '';\r\n            ul.style.right = Dropdown._nestedXPos;\r\n        } else {\r\n            ul.style.right = '';\r\n            ul.style.left = Dropdown._nestedXPos;\r\n        }\r\n        if((rect.top + ulRect.height) > window.innerHeight) {\r\n            ul.style.top = '';\r\n            ul.style.bottom = Dropdown._nestedYPos;\r\n        } else {\r\n            ul.style.bottom = '';\r\n            ul.style.top = Dropdown._nestedYPos;\r\n        }\r\n    }\r\n\r\n    get _keyboardHandlers() {\r\n        return {\r\n            // up arrow\r\n            '38': (open, active) => this._go(true, open, active), \r\n\r\n            // down arrow\r\n            '40': (open, active) => this._go(false, open, active),\r\n\r\n            // left arrow\r\n            '37': (active, open) => {\r\n                if(active && active.parentElement !== this.ul && active.parentElement.parentElement !== this.ul) {\r\n                    active.classList.remove(Dropdown._activeClassName);\r\n                    active.parentElement.parentElement.classList.remove(Dropdown._openClassName);\r\n                    active.parentElement.parentElement.classList.add(Dropdown._activeClassName);\r\n                } else if(open && open !== this.ul) {\r\n                    Dropdown._closeRelated(open.parentElement);\r\n                }\r\n            },\r\n\r\n            // right arrow\r\n            '39': active => {\r\n                if(active && active.classList.contains(Dropdown._subnavClassName)) {\r\n                    Dropdown._openNested(active);\r\n                    active.querySelector('li').classList.add(Dropdown._activeClassName);\r\n                }\r\n            },\r\n\r\n            // enter\r\n            '13': active => active && active.click(), \r\n\r\n            // escape\r\n            '27': this.dismiss, \r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {Array<Dropdown~NavItem|Dropdown~NavMenu>} navList - Object representation of the context menu.\r\n     * @param {Dropdown~Options} options - Optional parameters for this instance\r\n     */\r\n    constructor(navList, options = {}) { \r\n        this.dismiss = this.dismiss.bind(this);\r\n        this._keyboardNavigation = this._keyboardNavigation.bind(this);\r\n        \r\n        this.logger = options.logger ? options.logger : console.log.bind(console); // eslint-disable-line no-console\r\n        this.navList = navList;\r\n\r\n        this._items = {};\r\n        this.ul = this._createList(navList, 'item');\r\n        this.ul.classList.add(Dropdown._baseClassName);\r\n\r\n        (options.context ? options.context : document.body).appendChild(this.ul);\r\n    }\r\n\r\n    /**\r\n     * A helper function to create the dom structure of the dropdown\r\n     *\r\n     * @private \r\n     *\r\n     * @param navList {Array<Dropdown~NavItem|Dropdown~NavMenu>} The object representation of the context menu\r\n     */\r\n    _createList(navList, keyPrefix) {\r\n        const ul = document.createElement('ul');\r\n\r\n        var that = this;\r\n        ul.addEventListener('click', function(e) {\r\n            const key = e.target.getAttribute('data-key');\r\n            if(!key || !that._items[key]) {\r\n                return;\r\n            }\r\n            const {li, navElt} = that._items[key];\r\n\r\n            if(navElt.disabled) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            if(navElt.children) {\r\n                Dropdown._openNested(li);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            } else if(typeof(navElt.action) === 'string') {\r\n                window.location.href = navElt.action;\r\n            } else if(typeof(navElt.action) === 'function') {\r\n                navElt.action.call(this, e);\r\n            }\r\n        });\r\n\r\n        navList.forEach((navElt, idx) => {\r\n            const li = document.createElement('li');\r\n\r\n            navElt.key = navElt.key ? navElt.key : `${keyPrefix}-${idx}`;\r\n            if(this._items.hasOwnProperty(navElt.key)) {\r\n                throw new Error('Got duplicate key');\r\n            } else {\r\n                this._items[navElt.key] = { navElt, li };\r\n            }\r\n            li.setAttribute('data-key', navElt.key); // only used for debugging\r\n\r\n            li.innerText = navElt.label;\r\n\r\n            if(navElt.disabled) {\r\n                li.classList.add(Dropdown._disabledClassName);\r\n            }\r\n            li.addEventListener('mouseleave', e => {\r\n                if(navElt.disabled) {\r\n                    return;\r\n                }\r\n                this.logger('mouseleave', e);\r\n                clearTimeout(this.timeout);\r\n                e.target.classList.remove(Dropdown._activeClassName);\r\n            });\r\n            li.addEventListener('mouseenter', e => {\r\n                if(navElt.disabled) {\r\n                    return;\r\n                }\r\n                this.logger('mouseenter', e);\r\n\r\n                e.target.classList.add(Dropdown._activeClassName);\r\n\r\n                clearTimeout(this.timeout);\r\n                if(navElt.children) {\r\n                    this.timeout = setTimeout(Dropdown._openNested.bind(null, e.target), 500);\r\n                } else {\r\n                    this.timeout = setTimeout(Dropdown._closeRelated.bind(null, e.target), 500);\r\n                }\r\n            });\r\n\r\n            if(navElt.children) {\r\n                li.appendChild(this._createList(navElt.children, navElt.key));\r\n                li.classList.add(Dropdown._subnavClassName);\r\n            }\r\n\r\n            ul.appendChild(li);\r\n        });\r\n\r\n        return ul;\r\n    }\r\n\r\n    setDisabledState(key, disabled) {\r\n        const { li, navElt } = this._items[key];\r\n        navElt.disabled = disabled;\r\n        if(disabled) {\r\n            li.classList.add(Dropdown._disabledClassName);\r\n            li.classList.remove(Dropdown._openClassName);\r\n            li.classList.remove(Dropdown._activeClassName);\r\n\r\n            li.querySelectorAll(`.${Dropdown._openClassName}, .${Dropdown._activeClassName}`).forEach(elt => {\r\n                elt.classList.remove(Dropdown._openClassName); \r\n                elt.classList.remove(Dropdown._activeClassName);\r\n            });\r\n\r\n        } else {\r\n            li.classList.remove(Dropdown._disabledClassName);\r\n        }\r\n    }\r\n\r\n    _go(dirUp, active, open) {\r\n        const getNext = next => {\r\n            if(dirUp) {\r\n                return next.previousElementSibling;\r\n            } else {\r\n                return next.nextElementSibling;\r\n            }\r\n        };\r\n        if(active) {\r\n            active.classList.remove(Dropdown._activeClassName);\r\n        }\r\n        let next = (active && getNext(active)) || open.children[dirUp ? (open.children.length - 1) : 0];\r\n        while(next && next.classList.contains(Dropdown._disabledClassName)) {\r\n            next = getNext(next);\r\n        }\r\n        if(next) {\r\n            next.classList.add(Dropdown._activeClassName);\r\n        }\r\n        return next;\r\n    }\r\n\r\n    /**\r\n     * This is the keyboard navigation event handler\r\n     *\r\n     * @private\r\n     *\r\n     * @param {Event} e - The keyboard event that triggerd this handler\r\n     */\r\n    _keyboardNavigation(e) {\r\n        let open = this.ul.querySelectorAll(`.${Dropdown._openClassName} > ul`);\r\n        if(open.length > 0) {\r\n            open = open[open.length - 1];\r\n        } else {\r\n            open = this.ul;\r\n        }\r\n        let active = open.querySelector(`li.${Dropdown._activeClassName}`);\r\n        this.logger(open);\r\n\r\n        const key = `${e.keyCode}`;\r\n        if(this._keyboardHandlers.hasOwnProperty(key)) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            this._keyboardHandlers[key](active, open);\r\n        }\r\n    }\r\n\r\n    // Public methods\r\n    /**\r\n     * Close a dropdown and remove all event listeners on it\r\n     */\r\n    dismiss() {\r\n        this.logger('dismiss');\r\n        this.ul.classList.remove(Dropdown._openClassName);\r\n        document.removeEventListener('keydown', this._keyboardNavigation);\r\n        document.removeEventListener('click', this.dismiss);\r\n\r\n        this.ul.querySelectorAll('li').forEach(subnav => {\r\n            subnav.classList.remove(Dropdown._openClassName);\r\n            subnav.classList.remove(Dropdown._activeClassName);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This function will take an event and try to open and position the dropdown next to the mouse pointer or the\r\n     * element the event triggered on.\r\n     *\r\n     * @param {Event} evt - The event that triggered this click\r\n     */\r\n    openClick(evt) {\r\n        this.logger(evt);\r\n        evt.stopPropagation();\r\n        evt.preventDefault();\r\n        if(evt.clientX && evt.clientY) {\r\n            return this.open(window.pageXOffset + evt.clientX, window.pageYOffset + evt.clientY, true);\r\n        } \r\n\r\n        const rect = evt.target.getBoundingClientRect();\r\n        return this.open(window.pageXOffset + rect.right, window.pageYOffset + rect.bottom, true);\r\n    }\r\n\r\n    /**\r\n     * Open the dropdown rooted in the given position. It will expand down and to the right by default, but change\r\n     * expansion direction if it does not have enough space.\r\n     *\r\n     * @param {Number} left                  - How many pixels from the left the element should be positioned\r\n     * @param {Number} top                   - How many pixels from the top the element should be positioned\r\n     * @param {boolean} [autoExpandDir=true] - If true we will automatically expand the dropdown towards the top or\r\n     *                                         left if we don't have any space for it below or to the right. If false we\r\n     *                                         will only expand down and to the right.\r\n     */\r\n    open(left, top, autoExpandDir = true) {\r\n        this.ul.querySelectorAll(`.${Dropdown._openClassName},.${Dropdown._activeClassName}`).forEach(elt => {\r\n            elt.classList.remove(Dropdown._openClassName);\r\n            elt.classList.remove(Dropdown._activeClassName);\r\n        });\r\n        this.ul.classList.add(Dropdown._openClassName);\r\n\r\n        const rect = this.ul.getBoundingClientRect();\r\n        this.ul.style.left = `${left}px`;\r\n        this.ul.style.top = `${top}px`;\r\n        if(autoExpandDir) {\r\n            if((left + rect.width) >= (window.pageXOffset + window.innerWidth)) {\r\n                this.ul.style.left = `${left - rect.width}px`;\r\n            }\r\n            if((top + rect.height) >= (window.pageYOffset + window.innerHeight)) {\r\n                this.ul.style.top = `${top - rect.height}px`;\r\n            }\r\n        }\r\n\r\n        document.addEventListener('keydown', this._keyboardNavigation);\r\n        document.addEventListener('click', this.dismiss);\r\n\r\n        return this.ul;\r\n    }\r\n}\r\n\r\n//window.Dropdown = Dropdown;\r\nexport default Dropdown;\r\n"]}
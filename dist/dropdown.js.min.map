{"version":3,"sources":["dropdown.js"],"names":["Dropdown","navList","options","logger","console","log","bind","dismiss","ul","_createList","classList","add","_keyboardHandlers","open","active","_go","parentElement","remove","_activeClassName","_openClassName","_closeRelated","contains","_subnavClassName","_openNested","querySelector","click","context","document","body","appendChild","_keyboardNavigation","subnav","querySelectorAll","forEach","rect","getBoundingClientRect","ulRect","right","width","window","innerWidth","style","left","_nestedXPos","top","height","innerHeight","bottom","_nestedYPos","createElement","li","innerText","navElt","label","disabled","_disabledClassName","addEventListener","e","preventDefault","stopPropagation","clearTimeout","timeout","target","children","setTimeout","action","location","href","dirUp","getNext","next","previousElementSibling","nextElementSibling","length","key","keyCode","hasOwnProperty","removeEventListener","evt","clientX","clientY","pageXOffset","pageYOffset","autoExpandDir","elt"],"mappings":"4lBAGMA,C,YAqIF,WAAYC,CAAZ,CAAmC,YAAdC,CAAc,qEAC/B,KAAKC,MAAL,CAAcD,EAAQC,MAAR,CAAiBD,EAAQC,MAAzB,CAAkCC,QAAQC,GAAR,CAAYC,IAAZ,CAAiBF,OAAjB,CADjB,CAG/B,KAAKG,OAAL,CAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAHgB,CAK/B,KAAKE,EAAL,CAAU,KAAKC,WAAL,CAAiBR,CAAjB,CALqB,CAM/B,KAAKO,EAAL,CAAQE,SAAR,CAAkBC,GAAlB,CAAsB,UAAtB,CAN+B,CAQ/B,KAAKC,iBAAL,CAAyB,CAErB,GAAM,SAACC,CAAD,CAAOC,CAAP,QAAkB,GAAKC,GAAL,IAAeF,CAAf,CAAqBC,CAArB,CAAlB,CAFe,CAKrB,GAAM,SAACD,CAAD,CAAOC,CAAP,QAAkB,GAAKC,GAAL,IAAgBF,CAAhB,CAAsBC,CAAtB,CAAlB,CALe,CAQrB,GAAM,SAACA,CAAD,CAASD,CAAT,CAAkB,CACjBC,GAAUA,EAAOE,aAAP,GAAyB,EAAKR,EAAxC,EAA8CM,EAAOE,aAAP,CAAqBA,aAArB,GAAuC,EAAKR,EADzE,EAEhBM,EAAOJ,SAAP,CAAiBO,MAAjB,CAAwBjB,EAASkB,gBAAjC,CAFgB,CAGhBJ,EAAOE,aAAP,CAAqBA,aAArB,CAAmCN,SAAnC,CAA6CO,MAA7C,CAAoDjB,EAASmB,cAA7D,CAHgB,CAIhBL,EAAOE,aAAP,CAAqBA,aAArB,CAAmCN,SAAnC,CAA6CC,GAA7C,CAAiDX,EAASkB,gBAA1D,CAJgB,EAKVL,GAAQA,IAAS,EAAKL,EALZ,EAMhBR,EAASoB,aAAT,CAAuBP,EAAKG,aAA5B,CAEP,CAhBoB,CAmBrB,GAAM,WAAU,CACTF,GAAUA,EAAOJ,SAAP,CAAiBW,QAAjB,CAA0BrB,EAASsB,gBAAnC,CADD,GAERtB,EAASuB,WAAT,CAAqBT,CAArB,CAFQ,CAGRA,EAAOU,aAAP,CAAqB,IAArB,EAA2Bd,SAA3B,CAAqCC,GAArC,CAAyCX,EAASkB,gBAAlD,CAHQ,CAKf,CAxBoB,CA2BrB,GAAM,kBAAUJ,IAAUA,EAAOW,KAAP,EAApB,CA3Be,CA8BrB,GAAM,KAAKlB,OA9BU,CARM,CAyC/B,CAACL,EAAQwB,OAAR,CAAkBxB,EAAQwB,OAA1B,CAAoCC,SAASC,IAA9C,EAAoDC,WAApD,CAAgE,KAAKrB,EAArE,CAzC+B,CA2C/B,KAAKsB,mBAAL,CAA2B,KAAKA,mBAAL,CAAyBxB,IAAzB,CAA8B,IAA9B,CAE9B,C,qDAtFoByB,C,CAAQ,CACzBA,EAAOf,aAAP,CAAqBgB,gBAArB,KAA0ChC,EAASmB,cAAnD,EAAqEc,OAArE,CAA6E,WAAU,CACnFF,EAAOrB,SAAP,CAAiBO,MAAjB,CAAwBjB,EAASmB,cAAjC,CACH,CAFD,CAGH,C,oCAQkBY,C,CAAQ,CACvB/B,EAASoB,aAAT,CAAuBW,CAAvB,CADuB,CAEvBA,EAAOrB,SAAP,CAAiBC,GAAjB,CAAqBX,EAASmB,cAA9B,CAFuB,CAGvB,GAAMX,GAAKuB,EAAOP,aAAP,CAAqB,IAArB,CAAX,CACMU,EAAOH,EAAOI,qBAAP,EADb,CAEMC,EAAS5B,EAAG2B,qBAAH,EAFf,CAIID,EAAKG,KAAL,CAAaD,EAAOE,KAArB,CAA8BC,OAAOC,UAPjB,EAQnBhC,EAAGiC,KAAH,CAASC,IAAT,CAAgB,EARG,CASnBlC,EAAGiC,KAAH,CAASJ,KAAT,CAAiBrC,EAAS2C,WATP,GAWnBnC,EAAGiC,KAAH,CAASJ,KAAT,CAAiB,EAXE,CAYnB7B,EAAGiC,KAAH,CAASC,IAAT,CAAgB1C,EAAS2C,WAZN,EAcnBT,EAAKU,GAAL,CAAWR,EAAOS,MAAnB,CAA6BN,OAAOO,WAdhB,EAenBtC,EAAGiC,KAAH,CAASG,GAAT,CAAe,EAfI,CAgBnBpC,EAAGiC,KAAH,CAASM,MAAT,CAAkB/C,EAASgD,WAhBR,GAkBnBxC,EAAGiC,KAAH,CAASM,MAAT,CAAkB,EAlBC,CAmBnBvC,EAAGiC,KAAH,CAASG,GAAT,CAAe5C,EAASgD,WAnBL,CAqB1B,C,wCA9E6B,CAAE,MAAO,QAAW,C,sCAOtB,CAAE,MAAO,MAAW,C,wCAOlB,CAAE,MAAO,QAAW,C,0CAOlB,CAAE,MAAO,UAAa,C,mCAO7B,CAAE,MAAO,KAAW,C,mCAOpB,CAAE,MAAO,QAAW,C,2CAyGjC/C,C,CAAS,YACXO,EAAKmB,SAASsB,aAAT,CAAuB,IAAvB,CADM,CAmDjB,MAjDAhD,GAAQgC,OAAR,CAAgB,WAAU,CACtB,GAAMiB,GAAKvB,SAASsB,aAAT,CAAuB,IAAvB,CAAX,CACAC,EAAGC,SAAH,CAAeC,EAAOC,KAFA,CAInBD,EAAOE,QAJY,EAKlBJ,EAAGxC,SAAH,CAAaC,GAAb,CAAiBX,EAASuD,kBAA1B,CALkB,CAMlBL,EAAGM,gBAAH,CAAoB,OAApB,CAA6B,WAAK,CAC9BC,EAAEC,cAAF,EAD8B,CAE9BD,EAAEE,eAAF,EACH,CAHD,CANkB,GAWlBT,EAAGM,gBAAH,CAAoB,YAApB,CAAkC,WAAK,CACnC,EAAKrD,MAAL,CAAY,YAAZ,CAA0BsD,CAA1B,CADmC,CAEnCG,aAAa,EAAKC,OAAlB,CAFmC,CAGnCJ,EAAEK,MAAF,CAASpD,SAAT,CAAmBO,MAAnB,CAA0BjB,EAASkB,gBAAnC,CACH,CAJD,CAXkB,CAgBlBgC,EAAGM,gBAAH,CAAoB,YAApB,CAAkC,WAAK,CACnC,EAAKrD,MAAL,CAAY,YAAZ,CAA0BsD,CAA1B,CADmC,CAGnCA,EAAEK,MAAF,CAASpD,SAAT,CAAmBC,GAAnB,CAAuBX,EAASkB,gBAAhC,CAHmC,CAKnC0C,aAAa,EAAKC,OAAlB,CALmC,CAO/B,EAAKA,OAP0B,CAMhCT,EAAOW,QANyB,CAOhBC,WAAWhE,EAASuB,WAAT,CAAqBjB,IAArB,CAA0B,IAA1B,CAAgCmD,EAAEK,MAAlC,CAAX,CAAsD,GAAtD,CAPgB,CAShBE,WAAWhE,EAASoB,aAAT,CAAuBd,IAAvB,CAA4B,IAA5B,CAAkCmD,EAAEK,MAApC,CAAX,CAAwD,GAAxD,CAEtB,CAXD,CAhBkB,CA6BfV,EAAOW,QA7BQ,EA8Bdb,EAAGM,gBAAH,CAAoB,OAApB,CAA6B,SAASC,CAAT,CAAY,CAClCA,EAAEK,MAAF,GAAa,IADqB,GAEjC9D,EAASuB,WAAT,CAAqB2B,CAArB,CAFiC,CAGjCO,EAAEC,cAAF,EAHiC,CAIjCD,EAAEE,eAAF,EAJiC,CAMxC,CAND,CA9Bc,CAqCdT,EAAGrB,WAAH,CAAe,EAAKpB,WAAL,CAAiB2C,EAAOW,QAAxB,CAAf,CArCc,CAsCdb,EAAGxC,SAAH,CAAaC,GAAb,CAAiBX,EAASsB,gBAA1B,CAtCc,EAuCkB,QAA1B,QAAO8B,GAAOa,MAvCN,CAwCdf,EAAGM,gBAAH,CAAoB,OAApB,CAA6B,iBAAMjB,QAAO2B,QAAP,CAAgBC,IAAhB,CAAuBf,EAAOa,MAApC,CAA7B,CAxCc,CAyCkB,UAA1B,QAAOb,GAAOa,MAzCN,EA0Cdf,EAAGM,gBAAH,CAAoB,OAApB,CAA6BJ,EAAOa,MAApC,CA1Cc,EA8CtBzD,EAAGqB,WAAH,CAAeqB,CAAf,CACH,CA/CD,CAiDA,CAAO1C,CACV,C,4BAEG4D,C,CAAOtD,C,CAAQD,C,CAAM,CACrB,GAAMwD,GAAU,WAAQ,OACjBD,EADiB,CAETE,EAAKC,sBAFI,CAITD,EAAKE,kBAEnB,CAND,CAOG1D,CARkB,EASjBA,EAAOJ,SAAP,CAAiBO,MAAjB,CAAwBjB,EAASkB,gBAAjC,CATiB,KAWrB,GAAIoD,GAAQxD,GAAUuD,EAAQvD,CAAR,CAAX,EAA+BD,EAAKkD,QAAL,CAAcK,EAASvD,EAAKkD,QAAL,CAAcU,MAAd,CAAuB,CAAhC,CAAqC,CAAnD,CAXrB,CAYfH,GAAQA,EAAK5D,SAAL,CAAeW,QAAf,CAAwBrB,EAASuD,kBAAjC,CAZO,EAajBe,EAAOD,EAAQC,CAAR,CAAP,CAKJ,MAHGA,EAGH,EAFIA,EAAK5D,SAAL,CAAeC,GAAf,CAAmBX,EAASkB,gBAA5B,CAEJ,CAAOoD,CACV,C,4CASmBb,C,CAAG,CACnB,GAAI5C,GAAO,KAAKL,EAAL,CAAQwB,gBAAR,KAA6BhC,EAASmB,cAAtC,SAAX,CAEIN,CAHe,CAEF,CAAd,GAAK4D,MAFW,CAGR5D,EAAKA,EAAK4D,MAAL,CAAc,CAAnB,CAHQ,CAKR,KAAKjE,EALG,CAOnB,GAAIM,GAASD,EAAKW,aAAL,OAAyBxB,EAASkB,gBAAlC,CAAb,CACA,KAAKf,MAAL,CAAYU,CAAZ,CARmB,CAUnB,GAAM6D,MAASjB,EAAEkB,OAAjB,CACG,KAAK/D,iBAAL,CAAuBgE,cAAvB,CAAsCF,CAAtC,CAXgB,GAYfjB,EAAEE,eAAF,EAZe,CAafF,EAAEC,cAAF,EAbe,CAcf,KAAK9C,iBAAL,CAAuB8D,CAAvB,EAA4B5D,CAA5B,CAAoCD,CAApC,CAde,CAgBtB,C,iCAMS,CACN,KAAKV,MAAL,CAAY,SAAZ,CADM,CAEN,KAAKK,EAAL,CAAQE,SAAR,CAAkBO,MAAlB,CAAyBjB,EAASmB,cAAlC,CAFM,CAGNQ,SAASkD,mBAAT,CAA6B,SAA7B,CAAwC,KAAK/C,mBAA7C,CAHM,CAINH,SAASkD,mBAAT,CAA6B,OAA7B,CAAsC,KAAKtE,OAA3C,CAJM,CAMN,KAAKC,EAAL,CAAQwB,gBAAR,CAAyB,IAAzB,EAA+BC,OAA/B,CAAuC,WAAU,CAC7CF,EAAOrB,SAAP,CAAiBO,MAAjB,CAAwBjB,EAASmB,cAAjC,CAAgDnB,EAASkB,gBAAzD,CACH,CAFD,CAGH,C,kCAQS4D,C,CAAK,CAIX,GAHA,KAAK3E,MAAL,CAAY2E,CAAZ,CAGA,CAFAA,EAAInB,eAAJ,EAEA,CADAmB,EAAIpB,cAAJ,EACA,CAAGoB,EAAIC,OAAJ,EAAeD,EAAIE,OAAtB,CACI,MAAO,MAAKnE,IAAL,CAAU0B,OAAO0C,WAAP,CAAqBH,EAAIC,OAAnC,CAA4CxC,OAAO2C,WAAP,CAAqBJ,EAAIE,OAArE,IAAP,CAGJ,GAAM9C,GAAO4C,EAAIhB,MAAJ,CAAW3B,qBAAX,EAAb,CACA,MAAO,MAAKtB,IAAL,CAAU0B,OAAO0C,WAAP,CAAqB/C,EAAKG,KAApC,CAA2CE,OAAO2C,WAAP,CAAqBhD,EAAKa,MAArE,IACV,C,6BAYIL,C,CAAME,C,CAA2B,IAAtBuC,EAAsB,2DAClC,KAAK3E,EAAL,CAAQwB,gBAAR,KAA6BhC,EAASmB,cAAtC,MAAyDnB,EAASkB,gBAAlE,EAAsFe,OAAtF,CAA8F,WAAO,CACjGmD,EAAI1E,SAAJ,CAAcO,MAAd,CAAqBjB,EAASmB,cAA9B,CAA6CnB,EAASkB,gBAAtD,CACH,CAFD,CADkC,CAIlC,KAAKV,EAAL,CAAQE,SAAR,CAAkBC,GAAlB,CAAsBX,EAASmB,cAA/B,CAJkC,CAMlC,GAAMe,GAAO,KAAK1B,EAAL,CAAQ2B,qBAAR,EAAb,CAeA,MAdA,MAAK3B,EAAL,CAAQiC,KAAR,CAAcC,IAAd,CAAwBA,CAAxB,KAcA,CAbA,KAAKlC,EAAL,CAAQiC,KAAR,CAAcG,GAAd,CAAuBA,CAAvB,KAaA,CAZGuC,CAYH,GAXQzC,EAAOR,EAAKI,KAAb,EAAwBC,OAAO0C,WAAP,CAAqB1C,OAAOC,UAW3D,GAVQ,KAAKhC,EAAL,CAAQiC,KAAR,CAAcC,IAAd,CAAwBA,EAAOR,EAAKI,KAApC,KAUR,EARQM,EAAMV,EAAKW,MAAZ,EAAwBN,OAAO2C,WAAP,CAAqB3C,OAAOO,WAQ3D,GAPQ,KAAKtC,EAAL,CAAQiC,KAAR,CAAcG,GAAd,CAAuBA,EAAMV,EAAKW,MAAlC,KAOR,GAHAlB,SAAS6B,gBAAT,CAA0B,SAA1B,CAAqC,KAAK1B,mBAA1C,CAGA,CAFAH,SAAS6B,gBAAT,CAA0B,OAA1B,CAAmC,KAAKjD,OAAxC,CAEA,CAAO,KAAKC,EACf,C,mBAGUR,C","file":"dropdown.js","sourcesContent":["/**\n * Class representing a dropdown\n */\nclass Dropdown {\n    // General documentation of the types\n    /**\n     * @typedef {Object} Dropdown~NavItem\n     * This is the structure of a navigation item\n     * @property {string} label                   - The label which is used in the menu\n     * @property {boolean} [disabled=false]       - If this is true the item is disabled. If this is true we will not\n     *                                              navigate according to the action parameter or run the action\n     *                                              callback.\n     * @property {(string|Dropdown~actionCallback)} action - What to do when we select this nav item. If this is a string we will\n     *                                              navigate like an &lt;a&gt; tag\n     */\n\n    /**\n     * @typedef {Object} Dropdown~NavMenu\n     * This is the structure of a navigation submenu\n     * @property {string} label                    - The label which is used in the menu\n     * @property {boolean} [disabled=false]        - If this is true the item is disabled. When disabled it will not be\n     *                                               expanded\n     * @property {Array<Dropdown~NavItem|Dropdown~NavMenu>} children - The children of this menu\n     */\n\n    /**\n     * @callback Dropdown~actionCallback\n     * This is the action callback\n     * @param {Event} event - This is the event (either click or keypress) which triggered this handler\n     */\n\n    /**\n     * @typedef {Object} Dropdown~Options\n     * This is the structure of the options object\n     * @property {Dropdown~logger} [logger=console.log] - The logger to use\n     * @property {Element} [element=document.body] - The element to attach the dropdown to\n     */\n\n    /**\n     * @callback Dropdown~logger\n     * This is the logging function\n     * @param {...*} logItems - This should work similarly to how console.log uses multiple parameters\n     */\n\n    // Private members\n    /**\n     * Class name of a subnav\n     *\n     * @private\n     */\n    static get _subnavClassName() { return 'subnav'; }\n\n    /**\n     * Class name of an open subnav\n     *\n     * @private\n     */\n    static get _openClassName() { return 'open';   }\n\n    /*\n     * Class name of an active item\n     *\n     * @private\n     */\n    static get _activeClassName() { return 'active'; }\n\n    /**\n     * Class name of a disabled item\n     *\n     * @private\n     */\n    static get _disabledClassName() { return 'disabled'; }\n\n    /**\n     * X-position (either positive or negative dependeing on space available) of a submenu. Relative to the parent item.\n     *\n     * @private\n     */\n    static get _nestedXPos() { return '95%';    }\n\n    /**\n     * Y-position (either positive or negative depending on space available) of a submenu. Relative to the parent item.\n     *\n     * @private\n     */\n    static get _nestedYPos() { return '-0.2em'; }\n\n    // Private static methods\n    /**\n     * A helper function to close all submenus on a given level.\n     *\n     * @private\n     *\n     * @param {Element} subnav - An element on the level we want to close all the open subnavs\n     */\n    static _closeRelated(subnav) {\n        subnav.parentElement.querySelectorAll(`.${Dropdown._openClassName}`).forEach(subnav => {\n            subnav.classList.remove(Dropdown._openClassName);\n        });\n    }\n    /**\n     * A helper function to open a specific submenu\n     *\n     * @private\n     *\n     * @param {Element} subnav - The element of the subnav item we want to open\n     */\n    static _openNested(subnav) {\n        Dropdown._closeRelated(subnav);\n        subnav.classList.add(Dropdown._openClassName);\n        const ul = subnav.querySelector('ul');\n        const rect = subnav.getBoundingClientRect();\n        const ulRect = ul.getBoundingClientRect();\n\n        if((rect.right + ulRect.width) > window.innerWidth) {\n            ul.style.left = '';\n            ul.style.right = Dropdown._nestedXPos;\n        } else {\n            ul.style.right = '';\n            ul.style.left = Dropdown._nestedXPos;\n        }\n        if((rect.top + ulRect.height) > window.innerHeight) {\n            ul.style.top = '';\n            ul.style.bottom = Dropdown._nestedYPos;\n        } else {\n            ul.style.bottom = '';\n            ul.style.top = Dropdown._nestedYPos;\n        }\n    }\n\n\n    /**\n     * @constructor\n     * @param {Array<Dropdown~NavItem|Dropdown~NavMenu>} navList - Object representation of the context menu.\n     * @param {Dropdown~Options} options - Optional parameters for this instance\n     */\n    constructor(navList, options = {}) { \n        this.logger = options.logger ? options.logger : console.log.bind(console); // eslint-disable-line no-console\n\n        this.dismiss = this.dismiss.bind(this);\n\n        this.ul = this._createList(navList);\n        this.ul.classList.add('dropdown');\n\n        this._keyboardHandlers = {\n            // up arrow\n            '38': (open, active) => this._go(true, open, active), \n\n            // down arrow\n            '40': (open, active) => this._go(false, open, active),\n\n            // left arrow\n            '37': (active, open) => {\n                if(active && active.parentElement !== this.ul && active.parentElement.parentElement !== this.ul) {\n                    active.classList.remove(Dropdown._activeClassName);\n                    active.parentElement.parentElement.classList.remove(Dropdown._openClassName);\n                    active.parentElement.parentElement.classList.add(Dropdown._activeClassName);\n                } else if(open && open !== this.ul) {\n                    Dropdown._closeRelated(open.parentElement);\n                }\n            },\n\n            // right arrow\n            '39': active => {\n                if(active && active.classList.contains(Dropdown._subnavClassName)) {\n                    Dropdown._openNested(active);\n                    active.querySelector('li').classList.add(Dropdown._activeClassName);\n                }\n            },\n\n            // enter\n            '13': active => active && active.click(), \n\n            // escape\n            '27': this.dismiss, \n        };\n\n        (options.context ? options.context : document.body).appendChild(this.ul);\n\n        this._keyboardNavigation = this._keyboardNavigation.bind(this);\n\n    }\n\n    /**\n     * A helper function to create the dom structure of the dropdown\n     *\n     * @private \n     *\n     * @param navList {Array<Dropdown~NavItem|Dropdown~NavMenu>} The object representation of the context menu\n     */\n    _createList(navList) {\n        const ul = document.createElement('ul');\n        navList.forEach(navElt => {\n            const li = document.createElement('li');\n            li.innerText = navElt.label;\n\n            if(navElt.disabled) {\n                li.classList.add(Dropdown._disabledClassName);\n                li.addEventListener('click', e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                });\n            } else {\n                li.addEventListener('mouseleave', e => {\n                    this.logger('mouseleave', e);\n                    clearTimeout(this.timeout);\n                    e.target.classList.remove(Dropdown._activeClassName);\n                });\n                li.addEventListener('mouseenter', e => {\n                    this.logger('mouseenter', e);\n\n                    e.target.classList.add(Dropdown._activeClassName);\n\n                    clearTimeout(this.timeout);\n                    if(navElt.children) {\n                        this.timeout = setTimeout(Dropdown._openNested.bind(null, e.target), 500);\n                    } else {\n                        this.timeout = setTimeout(Dropdown._closeRelated.bind(null, e.target), 500);\n                    }\n                });\n\n                if(navElt.children) {\n                    li.addEventListener('click', function(e) {\n                        if(e.target === this) {\n                            Dropdown._openNested(li);\n                            e.preventDefault();\n                            e.stopPropagation();\n                        }\n                    });\n                    li.appendChild(this._createList(navElt.children));\n                    li.classList.add(Dropdown._subnavClassName);\n                } else if(typeof(navElt.action) === 'string') {\n                    li.addEventListener('click', () => window.location.href = navElt.action);\n                } else if(typeof(navElt.action) === 'function') {\n                    li.addEventListener('click', navElt.action);\n                }\n            }\n\n            ul.appendChild(li);\n        });\n\n        return ul;\n    }\n\n    _go(dirUp, active, open) {\n        const getNext = next => {\n            if(dirUp) {\n                return next.previousElementSibling;\n            } else {\n                return next.nextElementSibling;\n            }\n        };\n        if(active) {\n            active.classList.remove(Dropdown._activeClassName);\n        }\n        let next = (active && getNext(active)) || open.children[dirUp ? (open.children.length - 1) : 0];\n        while(next && next.classList.contains(Dropdown._disabledClassName)) {\n            next = getNext(next);\n        }\n        if(next) {\n            next.classList.add(Dropdown._activeClassName);\n        }\n        return next;\n    }\n\n    /**\n     * This is the keyboard navigation event handler\n     *\n     * @private\n     *\n     * @param {Event} e - The keyboard event that triggerd this handler\n     */\n    _keyboardNavigation(e) {\n        let open = this.ul.querySelectorAll(`.${Dropdown._openClassName} > ul`);\n        if(open.length > 0) {\n            open = open[open.length - 1];\n        } else {\n            open = this.ul;\n        }\n        let active = open.querySelector(`li.${Dropdown._activeClassName}`);\n        this.logger(open);\n\n        const key = `${e.keyCode}`;\n        if(this._keyboardHandlers.hasOwnProperty(key)) {\n            e.stopPropagation();\n            e.preventDefault();\n            this._keyboardHandlers[key](active, open);\n        }\n    }\n\n    // Public methods\n    /**\n     * Close a dropdown and remove all event listeners on it\n     */\n    dismiss() {\n        this.logger('dismiss');\n        this.ul.classList.remove(Dropdown._openClassName);\n        document.removeEventListener('keydown', this._keyboardNavigation);\n        document.removeEventListener('click', this.dismiss);\n\n        this.ul.querySelectorAll('li').forEach(subnav => {\n            subnav.classList.remove(Dropdown._openClassName,Dropdown._activeClassName);\n        });\n    }\n\n    /**\n     * This function will take an event and try to open and position the dropdown next to the mouse pointer or the\n     * element the event triggered on.\n     *\n     * @param {Event} evt - The event that triggered this click\n     */\n    openClick(evt) {\n        this.logger(evt);\n        evt.stopPropagation();\n        evt.preventDefault();\n        if(evt.clientX && evt.clientY) {\n            return this.open(window.pageXOffset + evt.clientX, window.pageYOffset + evt.clientY, true);\n        } \n\n        const rect = evt.target.getBoundingClientRect();\n        return this.open(window.pageXOffset + rect.right, window.pageYOffset + rect.bottom, true);\n    }\n\n    /**\n     * Open the dropdown rooted in the given position. It will expand down and to the right by default, but change\n     * expansion direction if it does not have enough space.\n     *\n     * @param {Number} left                  - How many pixels from the left the element should be positioned\n     * @param {Number} top                   - How many pixels from the top the element should be positioned\n     * @param {boolean} [autoExpandDir=true] - If true we will automatically expand the dropdown towards the top or\n     *                                         left if we don't have any space for it below or to the right. If false we\n     *                                         will only expand down and to the right.\n     */\n    open(left, top, autoExpandDir = true) {\n        this.ul.querySelectorAll(`.${Dropdown._openClassName},.${Dropdown._activeClassName}`).forEach(elt => {\n            elt.classList.remove(Dropdown._openClassName,Dropdown._activeClassName);\n        });\n        this.ul.classList.add(Dropdown._openClassName);\n\n        const rect = this.ul.getBoundingClientRect();\n        this.ul.style.left = `${left}px`;\n        this.ul.style.top = `${top}px`;\n        if(autoExpandDir) {\n            if((left + rect.width) >= (window.pageXOffset + window.innerWidth)) {\n                this.ul.style.left = `${left - rect.width}px`;\n            }\n            if((top + rect.height) >= (window.pageYOffset + window.innerHeight)) {\n                this.ul.style.top = `${top - rect.height}px`;\n            }\n        }\n\n        document.addEventListener('keydown', this._keyboardNavigation);\n        document.addEventListener('click', this.dismiss);\n\n        return this.ul;\n    }\n}\n\nexport default Dropdown;\n"]}